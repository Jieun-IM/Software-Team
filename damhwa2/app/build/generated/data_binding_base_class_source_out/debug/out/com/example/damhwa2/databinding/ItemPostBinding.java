// Generated by view binder compiler. Do not edit!
package com.example.damhwa2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.damhwa2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPostBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView commentButton;

  @NonNull
  public final ImageView likeButton;

  @NonNull
  public final TextView postContent;

  @NonNull
  public final ImageView profileImage;

  @NonNull
  public final ImageView shareButton;

  @NonNull
  public final TextView username;

  private ItemPostBinding(@NonNull LinearLayout rootView, @NonNull ImageView commentButton,
      @NonNull ImageView likeButton, @NonNull TextView postContent, @NonNull ImageView profileImage,
      @NonNull ImageView shareButton, @NonNull TextView username) {
    this.rootView = rootView;
    this.commentButton = commentButton;
    this.likeButton = likeButton;
    this.postContent = postContent;
    this.profileImage = profileImage;
    this.shareButton = shareButton;
    this.username = username;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.comment_button;
      ImageView commentButton = ViewBindings.findChildViewById(rootView, id);
      if (commentButton == null) {
        break missingId;
      }

      id = R.id.like_button;
      ImageView likeButton = ViewBindings.findChildViewById(rootView, id);
      if (likeButton == null) {
        break missingId;
      }

      id = R.id.post_content;
      TextView postContent = ViewBindings.findChildViewById(rootView, id);
      if (postContent == null) {
        break missingId;
      }

      id = R.id.profile_image;
      ImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.share_button;
      ImageView shareButton = ViewBindings.findChildViewById(rootView, id);
      if (shareButton == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new ItemPostBinding((LinearLayout) rootView, commentButton, likeButton, postContent,
          profileImage, shareButton, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
